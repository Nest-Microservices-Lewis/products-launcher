version: "3"

services:
  nats-server:
    image: nats:latest
    ports:
      - "8222:8222"

  client-gateway:
    build: ./client-gateway
    ports:
      - ${CLIENT_GATEWAY_PORT:-3000}:3000
    volumes:
      - ./client-gateway/src:/usr/src/app/src
    command: npm run start:dev
    env_file:
      - .env
    environment:
      - PORT=3000
    depends_on:
      - orders-ms
      - products-ms
      - nats-server

  products-ms:
    build: ./products-ms
    volumes:
      - ./products-ms/src:/usr/src/app/src
    command: npm run start:dev
    env_file:
      - .env
    environment:
      - PORT=3001
      - DATABASE_URL=file:./dev.db
    depends_on:
      - nats-server

  orders-ms:
    build: ./orders-ms
    volumes:
      - ./orders-ms/src:/usr/src/app/src
    command: npm run start:dev
    env_file:
      - .env
    environment:
      - PORT=3002
      - DATABASE_URL=postgresql://postgres:postgres@orders-db:5432/ordersdb
    depends_on:
      - orders-db
      - nats-server

  payments-ms:
    build: ./payments-ms
    ports:
      - ${PAYMENTS_MS_PORT}:3003
    volumes:
      - ./payments-ms/src:/usr/src/app/src
    command: npm run start:dev
    env_file:
      - .env
    environment:
      - PORT=${PAYMENTS_MS_PORT:-3003}
      - PAYMENTS_MS_PORT=${PAYMENTS_MS_PORT}
      - STRIPE_SECRET=${STRIPE_SECRET}
      - SUCCESS_URL=${SUCCESS_URL}
      - CANCEL_URL=${CANCEL_URL}
      - ENDPOINT_SECRET=${ENDPOINT_SECRET}
    depends_on:
      - nats-server

  auth-ms:
    build: ./auth-ms
    volumes:
      - ./auth-ms/src:/usr/src/app/src
    command: npm run start:dev
    env_file:
      - .env
    environment:
      - PORT=3004
      - DATABASE_URL=${AUTH_DATABASE_URL}
    depends_on:
      - nats-server

  # Databases
  orders-db:
    extends:
      file: ./orders-ms/docker-compose.yml
      service: orders-db
    volumes:
      - ./orders-ms/postgres:/var/lib/postgresql/data
